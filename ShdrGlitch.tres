[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 1

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorFunc" id=5]
function = 5

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;
render_mode blend_add;




void vertex() {
// Output:0

}

void fragment() {
// Input:13
	vec3 n_out13p0 = FRAGCOORD.xyz;

// ScalarFunc:15
	float n_out15p0 = cos(dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)));

// Input:16
	float n_out16p0 = TIME;

// ScalarOp:12
	float n_out12p0 = n_out15p0 + n_out16p0;

// VectorFunc:9
	vec3 n_out9p0;
	{
		vec3 c = vec3(n_out12p0);
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out9p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	COLOR.rgb = n_out9p0;

}

void light() {
// Output:0

}
"
mode = 1
modes/blend = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 780, 140 )
nodes/fragment/9/node = SubResource( 5 )
nodes/fragment/9/position = Vector2( 420, 200 )
nodes/fragment/12/node = SubResource( 1 )
nodes/fragment/12/position = Vector2( 220, 180 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -220, 160 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( 20, 160 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( -120, 280 )
nodes/fragment/connections = PoolIntArray( 9, 0, 0, 0, 12, 0, 9, 0, 13, 0, 15, 0, 16, 0, 12, 1, 15, 0, 12, 0 )

[resource]
shader = SubResource( 6 )
